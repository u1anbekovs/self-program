Index: src/pages/Login/FirstLogin/FirstLogin.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect, useState} from 'react';\r\nimport Book from \"./../../../assets/img/logo.svg\"\r\nimport {AiOutlineEye, AiOutlineEyeInvisible} from \"react-icons/ai\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n\r\nconst FirstLogin = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [info, setInfo] = useState(false)\r\n    const [emailGo, setEmailGo] = useState(false)\r\n    const [passwordGo, setPasswordGo] = useState(false)\r\n    const [emailError, setEmailError] = useState('Емайл не может быть пустым')\r\n    const [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\r\n    const [formValid, setFormValid] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (emailError || passwordError){\r\n            setFormValid(false)\r\n        }else {\r\n            setFormValid(true)\r\n        }\r\n    },[emailError, passwordError])\r\n\r\n\r\n    const EmailHandler = (e) => {\r\n        setEmail(e.target.value)\r\n        const re =/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if (!re.test(String(e.target.value).toLowerCase())){\r\n            setEmailError('некорректный емайл')\r\n            if (!e.target.value){\r\n                setEmailError('Емайл не может быть пустым')\r\n            }\r\n        }else {\r\n            setEmailError('')\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n        if (e.target.value.length > 0 || e.target.value.length > 4){\r\n            setPasswordError('пароль должен быть больще 4 и менше 8')\r\n            if (!e.target.value.length > 0 || e.target.value.length > 4){\r\n                setPasswordError('')\r\n            }\r\n            if (!e.target.value){\r\n                setPasswordError('')\r\n            }\r\n       }else {\r\n            setPasswordError('Пароль не может быть пустым')\r\n        }\r\n    }\r\n\r\n    function getInfo () {\r\n        if (info){\r\n            return  <div className=\"firstLogin--block__login--input\">\r\n                {(passwordGo && passwordError) && <p style={{color: 'red'}}>{passwordError}</p>}\r\n                <input onChange={e => passwordHandler(e)} value={password} onBlur={(e => start(e))} type=\"text\" name=\"Password\" placeholder='Password' id=\"\"/>\r\n                <AiOutlineEye onClick={() => setInfo(!info)} className={\"firstLogin--block__login--input__icon\"}/>\r\n            </div>\r\n\r\n        }\r\n        else return <div className=\"firstLogin--block__login--input\">\r\n            {(passwordGo && passwordError) && <p style={{color: 'red'}}>{passwordError}</p>}\r\n            <input onChange={e => passwordHandler(e)} value={password} onBlur={(e => start(e))} type=\"password\" name=\"Password\" placeholder='Password' id=\"\"/>\r\n            <input style={{\r\n                border: passwordError ? '1px solid red' : ''\r\n            }} onChange={e => passwordHandler(e)} value={password} onBlur={(e => start(e))} type=\"password\" name=\"Password\" placeholder='Password' id=\"\"/>\r\n            <AiOutlineEyeInvisible onClick={() => setInfo(!info)} className={\"firstLogin--block__login--input__icon\"}/>\r\n        </div>\r\n\r\n\r\n    }\r\n\r\n\r\n    const start = (e) => {\r\n            switch (e.target.name){\r\n                case 'Email':\r\n                    setEmailGo(true)\r\n                    break\r\n                case 'Password':\r\n                    setPasswordGo(true)\r\n                    break\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"firstLogin\">\r\n            <div className=\"container\">\r\n                <div className=\"firstLogin\">\r\n                    <div className=\"firstLogin--block\">\r\n                        <img src={Book} alt=\"\" />\r\n                        <h1>SELF DEVELOPING SCHOOL</h1>\r\n                        <div className=\"firstLogin--block__login\">\r\n                            <h2>Войти в аккаунт</h2>\r\n                           <div className=\"firstLogin--block__login--div\">\r\n                               {(emailGo && emailError) && <p>{emailError}</p>}\r\n                               <input className={'firstLogin--block__login--div__Email'} onChange={e => EmailHandler(e)} value={email} onBlur={(e => start(e))} type=\"text\" name=\"Email\" placeholder='Email...' id=\"\" />\r\n                               <input style={{\r\n                                   border: emailError ? '1px solid red' : ''\r\n                               }} className={'firstLogin--block__login--div__Email'} onChange={e => EmailHandler(e)} value={email} onBlur={(e => start(e))} type=\"text\" name=\"Email\" placeholder='Email...' id=\"\" />\r\n                           </div>\r\n                            {getInfo()}\r\n                            <button>Войти</button>\r\n                            <Link to={'/password-url'}>\r\n                                <h3>Забыли пароль?</h3>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FirstLogin;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Login/FirstLogin/FirstLogin.js b/src/pages/Login/FirstLogin/FirstLogin.js
--- a/src/pages/Login/FirstLogin/FirstLogin.js	(revision 80662c146b06b71d6f066cd1d8870bc0739fdcd0)
+++ b/src/pages/Login/FirstLogin/FirstLogin.js	(date 1681922740470)
@@ -2,7 +2,7 @@
 import Book from "./../../../assets/img/logo.svg"
 import {AiOutlineEye, AiOutlineEyeInvisible} from "react-icons/ai";
 import {Link} from "react-router-dom";
-import {Link, useNavigate} from "react-router-dom";
+import { useNavigate} from "react-router-dom";
 import {useDispatch} from "react-redux";
 
 
